; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=mina32 -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=M32I %s

; This test checks that LLVM can do basic stripping and reapplying of branches
; to basic blocks.

declare void @test_true()
declare void @test_false()

; !0 corresponds to a branch being taken, !1 to not being takne.
!0 = !{!"branch_weights", i32 64, i32 4}
!1 = !{!"branch_weights", i32 4, i32 64}

define void @test_bcc_fallthrough_taken(i32 %in) nounwind {
; M32I-LABEL: test_bcc_fallthrough_taken:
; M32I:       ; %bb.0:
; M32I-NEXT:    addi sp, sp, -4
; M32I-NEXT:    st r14, [sp, 0]
; M32I-NEXT:    addi r14, sp, 4
; M32I-NEXT:    cmpi.eq r0, 42
; M32I-NEXT:    bf .LBB0_3
; M32I-NEXT:  ; %bb.1: ; %true
; M32I-NEXT:    movu r0, %hi(test_true)
; M32I-NEXT:    movl r0, %lo(test_true)
; M32I-NEXT:  .LBB0_2: ; %true
; M32I-NEXT:    rcall r0, 0
; M32I-NEXT:    ld r14, [sp, 0]
; M32I-NEXT:    addi sp, sp, 4
; M32I-NEXT:    ret
; M32I-NEXT:  .LBB0_3: ; %false
; M32I-NEXT:    movu r0, %hi(test_false)
; M32I-NEXT:    movl r0, %lo(test_false)
; M32I-NEXT:    bra .LBB0_2
  %tst = icmp eq i32 %in, 42
  br i1 %tst, label %true, label %false, !prof !0

; Expected layout order is: Entry, TrueBlock, FalseBlock
; Entry->TrueBlock is the common path, which should be taken whenever the
; conditional branch is false.

true:
  call void @test_true()
  ret void

false:
  call void @test_false()
  ret void
}

define void @test_bcc_fallthrough_nottaken(i32 %in) nounwind {
; M32I-LABEL: test_bcc_fallthrough_nottaken:
; M32I:       ; %bb.0:
; M32I-NEXT:    addi sp, sp, -4
; M32I-NEXT:    st r14, [sp, 0]
; M32I-NEXT:    addi r14, sp, 4
; M32I-NEXT:    cmpi.eq r0, 42
; M32I-NEXT:    bt .LBB1_1
; M32I-NEXT:  ; %bb.3: ; %false
; M32I-NEXT:    movu r0, %hi(test_false)
; M32I-NEXT:    movl r0, %lo(test_false)
; M32I-NEXT:  .LBB1_2: ; %true
; M32I-NEXT:    rcall r0, 0
; M32I-NEXT:    ld r14, [sp, 0]
; M32I-NEXT:    addi sp, sp, 4
; M32I-NEXT:    ret
; M32I-NEXT:  .LBB1_1: ; %true
; M32I-NEXT:    movu r0, %hi(test_true)
; M32I-NEXT:    movl r0, %lo(test_true)
; M32I-NEXT:    bra .LBB1_2
  %tst = icmp eq i32 %in, 42
  br i1 %tst, label %true, label %false, !prof !1

; Expected layout order is: Entry, FalseBlock, TrueBlock
; Entry->FalseBlock is the common path, which should be taken whenever the
; conditional branch is false

true:
  call void @test_true()
  ret void

false:
  call void @test_false()
  ret void
}
