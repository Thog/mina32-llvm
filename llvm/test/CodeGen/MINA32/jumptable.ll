; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=mina32 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=M32I

define void @jt(i32 %in, i32* %out) {
; M32I-LABEL: jt:
; M32I:       ; %bb.0: ; %entry
; M32I-NEXT:    addi sp, sp, -4
; M32I-NEXT:    st r14, [sp, 0]
; M32I-NEXT:    addi r14, sp, 4
; M32I-NEXT:    movi r2, 2
; M32I-NEXT:    cmp.lt r2, r0
; M32I-NEXT:    bt .LBB0_4
; M32I-NEXT:  ; %bb.1: ; %entry
; M32I-NEXT:    cmpi.eq r0, 1
; M32I-NEXT:    bt .LBB0_8
; M32I-NEXT:  ; %bb.2: ; %entry
; M32I-NEXT:    cmpi.eq r0, 2
; M32I-NEXT:    bf .LBB0_10
; M32I-NEXT:  ; %bb.3: ; %bb2
; M32I-NEXT:    movi r0, 3
; M32I-NEXT:    st r0, [r1, 0]
; M32I-NEXT:    bra .LBB0_10
; M32I-NEXT:  .LBB0_4: ; %entry
; M32I-NEXT:    cmpi.eq r0, 3
; M32I-NEXT:    bt .LBB0_9
; M32I-NEXT:  ; %bb.5: ; %entry
; M32I-NEXT:    cmpi.eq r0, 4
; M32I-NEXT:    bf .LBB0_10
; M32I-NEXT:  ; %bb.6: ; %bb4
; M32I-NEXT:    movi r0, 1
; M32I-NEXT:    st r0, [r1, 0]
; M32I-NEXT:    bra .LBB0_10
; M32I-NEXT:  .LBB0_8: ; %bb1
; M32I-NEXT:    movi r0, 4
; M32I-NEXT:    st r0, [r1, 0]
; M32I-NEXT:    bra .LBB0_10
; M32I-NEXT:  .LBB0_9: ; %bb3
; M32I-NEXT:    st r2, [r1, 0]
; M32I-NEXT:  .LBB0_10: ; %exit
; M32I-NEXT:    ld r14, [sp, 0]
; M32I-NEXT:    addi sp, sp, 4
; M32I-NEXT:    ret
entry:
  switch i32 %in, label %exit [
    i32 1, label %bb1
    i32 2, label %bb2
    i32 3, label %bb3
    i32 4, label %bb4
  ]
bb1:
  store i32 4, i32* %out
  br label %exit
bb2:
  store i32 3, i32* %out
  br label %exit
bb3:
  store i32 2, i32* %out
  br label %exit
bb4:
  store i32 1, i32* %out
  br label %exit
exit:
  ret void
}
