; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=mina32 -verify-machineinstrs < %s \
; RUN:   | FileCheck %s -check-prefix=M32I

define i32 @bare_select(i1 %a, i32 %b, i32 %c) {
; M32I-LABEL: bare_select:
; M32I:       ; %bb.0:
; M32I-NEXT:    addi sp, sp, -4
; M32I-NEXT:    st r14, [sp, 0]
; M32I-NEXT:    addi r14, sp, 4
; M32I-NEXT:    andi r0, r0, 1
; M32I-NEXT:    cmpi.eq r0, 1
; M32I-NEXT:    mt r2, r1
; M32I-NEXT:    mov r0, r2
; M32I-NEXT:    ld r14, [sp, 0]
; M32I-NEXT:    addi sp, sp, 4
; M32I-NEXT:    ret
  %1 = select i1 %a, i32 %b, i32 %c
  ret i32 %1
}

define i32 @foo(i32 %a, i32 *%b) {
; M32I-LABEL: foo:
; M32I:       ; %bb.0:
; M32I-NEXT:    addi sp, sp, -4
; M32I-NEXT:    st r14, [sp, 0]
; M32I-NEXT:    addi r14, sp, 4
; M32I-NEXT:    ld r2, [r1, 0]
; M32I-NEXT:    cmp.eq r0, r2
; M32I-NEXT:    mt r2, r0
; M32I-NEXT:    ld r0, [r1, 0]
; M32I-NEXT:    cmp.eq r2, r0
; M32I-NEXT:    mt r2, r0
; M32I-NEXT:    ld r0, [r1, 0]
; M32I-NEXT:    cmp.lo r0, r2
; M32I-NEXT:    mt r0, r2
; M32I-NEXT:    ld r2, [r1, 0]
; M32I-NEXT:    cmp.ls r2, r0
; M32I-NEXT:    mt r2, r0
; M32I-NEXT:    ld r0, [r1, 0]
; M32I-NEXT:    cmp.lo r2, r0
; M32I-NEXT:    mt r0, r2
; M32I-NEXT:    ld r2, [r1, 0]
; M32I-NEXT:    cmp.ls r0, r2
; M32I-NEXT:    mt r2, r0
; M32I-NEXT:    ld r0, [r1, 0]
; M32I-NEXT:    cmp.lt r0, r2
; M32I-NEXT:    mt r0, r2
; M32I-NEXT:    ld r2, [r1, 0]
; M32I-NEXT:    cmp.le r2, r0
; M32I-NEXT:    mt r2, r0
; M32I-NEXT:    ld r3, [r1, 0]
; M32I-NEXT:    cmp.lt r2, r3
; M32I-NEXT:    mt r3, r2
; M32I-NEXT:    ld r0, [r1, 0]
; M32I-NEXT:    cmp.le r3, r0
; M32I-NEXT:    mt r0, r3
; M32I-NEXT:    ld r14, [sp, 0]
; M32I-NEXT:    addi sp, sp, 4
; M32I-NEXT:    ret
  %val1 = load volatile i32, i32* %b
  %tst1 = icmp eq i32 %a, %val1
  %val2 = select i1 %tst1, i32 %a, i32 %val1

  %val3 = load volatile i32, i32* %b
  %tst2 = icmp ne i32 %val2, %val3
  %val4 = select i1 %tst2, i32 %val2, i32 %val3

  %val5 = load volatile i32, i32* %b
  %tst3 = icmp ugt i32 %val4, %val5
  %val6 = select i1 %tst3, i32 %val4, i32 %val5

  %val7 = load volatile i32, i32* %b
  %tst4 = icmp uge i32 %val6, %val7
  %val8 = select i1 %tst4, i32 %val6, i32 %val7

  %val9 = load volatile i32, i32* %b
  %tst5 = icmp ult i32 %val8, %val9
  %val10 = select i1 %tst5, i32 %val8, i32 %val9

  %val11 = load volatile i32, i32* %b
  %tst6 = icmp ule i32 %val10, %val11
  %val12 = select i1 %tst6, i32 %val10, i32 %val11

  %val13 = load volatile i32, i32* %b
  %tst7 = icmp sgt i32 %val12, %val13
  %val14 = select i1 %tst7, i32 %val12, i32 %val13

  %val15 = load volatile i32, i32* %b
  %tst8 = icmp sge i32 %val14, %val15
  %val16 = select i1 %tst8, i32 %val14, i32 %val15

  %val17 = load volatile i32, i32* %b
  %tst9 = icmp slt i32 %val16, %val17
  %val18 = select i1 %tst9, i32 %val16, i32 %val17

  %val19 = load volatile i32, i32* %b
  %tst10 = icmp sle i32 %val18, %val19
  %val20 = select i1 %tst10, i32 %val18, i32 %val19

  ret i32 %val20
}
